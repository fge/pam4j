<project name="pam4j" default="compile" xmlns:artifact="urn:maven-artifact-ant">

    <!-- Load Maven antlib and make pom.xml available as maven.project -->
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
        uri="urn:maven-artifact-ant">
        <classpath>
            <pathelement location="tools/maven-artifact-ant-2.0.4-dep.jar"/>
        </classpath>
    </typedef>

    <!-- Default properties -->
    <property file="ant/build.properties"/>


    <artifact:pom file="pom.xml" id="maven.project"/>

    <property name="name" value="${maven.project.name}"/>
    <property name="version" value="${maven.project.version}"/>

    <artifact:dependencies filesetId="dependency.fileset"
        pathId="dependency.classpath" verbose="false">
        <pom refid="maven.project"/>
    </artifact:dependencies>

    <artifact:dependencies filesetId="compile.dependency.fileset"
        pathId="compile.dependency.classpath" useScope="compile">
        <pom refid="maven.project"/>
    </artifact:dependencies>

    <!-- Set up project.class.path -->
    <path id="project.class.path">
        <path refid="dependency.classpath"/>
    </path>

    <target name="clean" description="Cleans the build directory">
        <delete dir="${build.dir}"/>
    </target>

    <!-- compiles -->
    <target name="compile" depends="compile-src, compile-tests"
        description="Performs a compile"/>

    <!-- Compiles the source classes -->
    <target name="compile-src" description="compile src files">
        <mkdir dir="${build.classes.dir}"/>
        <javac destdir="${build.classes.dir}" debug="true" deprecation="on">
            <src location="${src.java.dir}"/>
            <classpath refid="project.class.path"/>
        </javac>
    </target>

    <target name="generate-c-headers" depends="compile-src">
        <mkdir dir="${generated.src.c.dir}"/>
        <javah destdir="${generated.src.c.dir}" force="true">
            <class name="org.eel.kitchen.pam.PamHandle"/>
            <classpath>
                <pathelement location="${build.classes.dir}"/>
                <path refid="project.class.path"/>
            </classpath>
        </javah>
    </target>

    <target name="compile-tests" depends="compile-src">
        <mkdir dir="${test.classes.dir}"/>
        <javac destdir="${test.classes.dir}" debug="true" deprecation="on">
            <src location="${test.java.dir}"/>
            <classpath>
                <path path="${build.classes.dir}"/>
                <path refid="project.class.path"/>
            </classpath>
        </javac>
    </target>

    <target name="cmake" depends="compile-src">
        <exec executable="cmake" dir="${src.c.dir}" failonerror="true">
            <arg value="."/>
        </exec>
    </target>

    <target name="make" depends="cmake">
        <exec executable="make" dir="${src.c.dir}" failonerror="true"/>
    </target>

    <target name="install-shared" depends="make">
        <mkdir dir="${generated.src.c.dir}"/>
        <copy file="${src.c.dir}/libpam4j.so" todir="${generated.src.c.dir}"
            overwrite="true" failonerror="true"/>
    </target>
</project>
